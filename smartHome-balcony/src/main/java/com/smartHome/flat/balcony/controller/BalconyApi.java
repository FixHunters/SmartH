package com.smartHome.flat.balcony.controller;
/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.0).
 * https://github.com/swagger-api/swagger-codegen Do not edit the class manually.
 */

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.smartHome.flat.balcony.model.SensorsResponseEntity;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@javax.annotation.Generated(
  value = "io.swagger.codegen.languages.SpringCodegen",
  date = "2018-04-03T15:24:02.669+02:00"
)
@Api(value = "tpps", description = "the status API")
public interface BalconyApi {
	
	  @ApiOperation(
			    value = "",
			    nickname = "getPIR",
			    notes = "Get PIR motion status",
			    response = SensorsResponseEntity.class,
			    tags = {}
			  )
			  @ApiResponses(
			    value = {
			      @ApiResponse(
			        code = 200,
			        message = "Get PIR motion was sucessful",
			        response = SensorsResponseEntity.class
			      ),
			      @ApiResponse(code = 400, message = "Wrong input data format", response = Error.class)
			    }
			  )
			  @RequestMapping(
			    value = "/pir",
			    produces = {"application/json"},
			    method = RequestMethod.GET
			  )
			  Boolean getPir();
	
	  @ApiOperation(
			    value = "",
			    nickname = "getADC",
			    notes = "Setup ADC converter",
			    response = SensorsResponseEntity.class,
			    tags = {}
			  )
			  @ApiResponses(
			    value = {
			      @ApiResponse(
			        code = 200,
			        message = "Setup ADC converter was sucessful",
			        response = SensorsResponseEntity.class
			      ),
			      @ApiResponse(code = 400, message = "Wrong input data format", response = Error.class)
			    }
			  )
			  @RequestMapping(
			    value = "/adc",
			    produces = {"application/json"},
			    method = RequestMethod.GET
			  )
			  Double getAdc();

  @ApiOperation(
    value = "",
    nickname = "getData",
    notes = "Retrieve jsonObject of Datas",
    response = SensorsResponseEntity.class,
    tags = {}
  )
  @ApiResponses(
    value = {
      @ApiResponse(
        code = 200,
        message = "The operation was successful",
        response = SensorsResponseEntity.class
      ),
      @ApiResponse(code = 400, message = "Wrong input data format", response = Error.class)
    }
  )
  @RequestMapping(
    value = "/data",
    produces = {"application/json"},
    method = RequestMethod.GET
  )
  ResponseEntity<SensorsResponseEntity> getData();

  @ApiOperation(
		    value = "",
		    nickname = "patchWaterPump",
		    notes = "Retrieve jsonObject of waterPump status",
		    response = SensorsResponseEntity.class,
		    tags = {}
		  )
		  @ApiResponses(
		    value = {
		      @ApiResponse(
		        code = 200,
		        message = "The operation was successful",
		        response = Boolean.class
		      ),
		      @ApiResponse(code = 400, message = "Wrong input data format", response = Error.class)
		    }
		  )
		  @RequestMapping(
		    value = "/waterPump",
		    produces = {"application/json"},
		    method = RequestMethod.PATCH
		  )
  		Boolean patchWaterPump();
  
  
  @ApiOperation(
		    value = "",
		    nickname = "postAutomateWatering",
		    notes = "Retrieve jsonObject of waterPump status",
		    response = SensorsResponseEntity.class,
		    tags = {}
		  )
		  @ApiResponses(
		    value = {
		      @ApiResponse(
		        code = 200,
		        message = "The operation was successful"
		      ),
		      @ApiResponse(code = 400, message = "Wrong input data format", response = Error.class)
		    }
		  )
		  @RequestMapping(
		    value = "/automateWatering",
		    produces = {"application/json"},
		    method = RequestMethod.POST
		  )
  		void setAutomateWatering();
  
/*  @ApiOperation(
		    value = "",
		    nickname = "getRadio",
		    notes = "Retrieve radio stations",
		    response = SensorsResponseEntity.class,
		    tags = {}
		  )
		  @ApiResponses(
		    value = {
		      @ApiResponse(
		        code = 200,
		        message = "The operation was successful",
		        response = SensorsResponseEntity.class
		      ),
		      @ApiResponse(code = 400, message = "Wrong input data format", response = Error.class)
		    }
		  )
		  @RequestMapping(
		    value = "/radio",
		    produces = {"application/json"},
		    method = RequestMethod.GET
		  )
  			List<Integer> getRadio();*/
}
